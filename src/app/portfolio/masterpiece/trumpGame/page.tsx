import ProjectCard from "@/app/component/ProjectCard/ProjectCard"

const description = `
## 初心者が1ヶ月でゲームを完成させるまで

---

### ⏳ 制作期間
**2023年6月～2023年7月(約1ヶ月)**

---

### 👥 制作体制

- **プログラマー : 1人(個人開発)**

---

### 🛠️ 自分の担当

- **トランプの柄の実装**
  トランプの柄(ダイヤ、ハート、スペード、クラブ)を基本的な図形である三角形と円をうまく組み合わせて制作。

- **ゲームシステムの実装**
  複数人でも対戦できるようなターン制のゲーム進行や取得した2枚のカードがペア一致しているかの判別、乱数を用いたカードのシャッフルなどを実現。

---

### 📎 プロジェクトリンク

🔗 [GitHubリポジトリはこちら](https://github.com/sunshine-724/sinkeisuijaku)  

---

### 💡 学び・感想

このゲームは、大学1回生の春学期に履修した「基礎プログラミング(C言語)」の自由制作課題として、プログラミングを学び始めてから約1ヶ月で制作したものです。
当時はライブラリの機能を十分に理解しておらず、画像読み込み機能があることを知らなかったため、円や三角形といった基本的な図形描画命令を組み合わせて52枚全てのトランプ柄を自作しました。  
今思えば非効率な実装でしたが、この経験を通して 最後までやり遂げる**「粘り強さ」**という自身の強みを見つけることができました。  
C言語での開発で特に苦労したのがポインタの概念です。ライブラリの制約でポインタを使用しましたが、概念の理解と実践での応用に多くの時間を費やしました。  
しかしこの時の苦労が、後にC# (Unity)やJavaといったオブジェクト指向言語を学ぶ上で、参照やインスタンスといった概念の深い理解に繋がる貴重な経験となりました。  
また、当初は52枚分のカード描画処理を個別に記述しようとしていましたが、コードの肥大化と作業量の多さに気づき、「柄の描画」と「柄の配置」をそれぞれ関数としてモジュール化するアプローチに変更しました。  
この経験から、**関数の再利用性を意識した設計の重要性**を実践的に学ぶことができました。 
`
const files:string[] = ["/portfolio/trumpGame/memoryGame.mp4","/portfolio/trumpGame/memoryGame2.mp4"];
export default function TrumpGame(){
    return (
        <ProjectCard
         files={files}
         title="神経衰弱"
         description={description}
         chips={["C"]}
         ></ProjectCard>
    )
}